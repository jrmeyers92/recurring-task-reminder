-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.events (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  user_id uuid DEFAULT auth.uid(),
  event_name text,
  event_description text,
  event_start_time text,
  event_end_time text,
  event_street_address text,
  event_city text,
  event_state text,
  event_zip_code text,
  event_celebration text,
  updated_at timestamp without time zone NOT NULL DEFAULT now(),
  event_date text,
  event_items json,
  event_location text,
  event_guest_count text,
  event_enable_additional_items boolean,
  event_additional_items json,
  CONSTRAINT events_pkey PRIMARY KEY (id),
  CONSTRAINT events_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.grocerylist_recipe_ingredients (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  owner_id text NOT NULL,
  recipe_id uuid,
  name_raw text NOT NULL,
  name_norm text DEFAULT lower(TRIM(BOTH FROM name_raw)),
  quantity numeric NOT NULL,
  unit USER-DEFINED NOT NULL,
  aisle USER-DEFINED DEFAULT 'other'::ingredient_aisles,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT grocerylist_recipe_ingredients_pkey PRIMARY KEY (id),
  CONSTRAINT grocerylist_recipe_ingredients_recipe_id_fkey FOREIGN KEY (recipe_id) REFERENCES public.grocerylist_recipes(id)
);
CREATE TABLE public.grocerylist_recipe_steps (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  recipe_id uuid,
  step_number integer NOT NULL,
  instruction text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT grocerylist_recipe_steps_pkey PRIMARY KEY (id),
  CONSTRAINT grocerylist_recipe_steps_recipe_id_fkey FOREIGN KEY (recipe_id) REFERENCES public.grocerylist_recipes(id)
);
CREATE TABLE public.grocerylist_recipes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  owner_id text NOT NULL,
  title text NOT NULL,
  description text,
  servings integer DEFAULT 4,
  prep_time integer,
  cook_time integer,
  image_url text,
  tags ARRAY DEFAULT '{}'::text[],
  is_favorite boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT grocerylist_recipes_pkey PRIMARY KEY (id)
);
CREATE TABLE public.grocerylist_shoppinglist (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  owner_id text NOT NULL,
  title text DEFAULT 'This Week'::text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT grocerylist_shoppinglist_pkey PRIMARY KEY (id)
);
CREATE TABLE public.grocerylist_shoppinglist_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  owner_id text NOT NULL,
  menu_id uuid NOT NULL,
  name text NOT NULL,
  quantity numeric NOT NULL DEFAULT 1.0,
  unit USER-DEFINED NOT NULL DEFAULT 'unit'::ingredient_units,
  aisle USER-DEFINED DEFAULT 'other'::ingredient_aisles,
  notes text,
  is_checked boolean DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT grocerylist_shoppinglist_items_pkey PRIMARY KEY (id),
  CONSTRAINT grocerylist_shoppinglist_items_menu_id_fkey FOREIGN KEY (menu_id) REFERENCES public.grocerylist_shoppinglist(id)
);
CREATE TABLE public.grocerylist_shoppinglist_recipes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  owner_id text NOT NULL,
  menu_id uuid,
  recipe_id uuid,
  serving_multiplier numeric DEFAULT 1.0,
  added_at timestamp with time zone DEFAULT now(),
  CONSTRAINT grocerylist_shoppinglist_recipes_pkey PRIMARY KEY (id),
  CONSTRAINT grocerylist_menu_recipes_menu_id_fkey FOREIGN KEY (menu_id) REFERENCES public.grocerylist_shoppinglist(id),
  CONSTRAINT grocerylist_menu_recipes_recipe_id_fkey FOREIGN KEY (recipe_id) REFERENCES public.grocerylist_recipes(id)
);
CREATE TABLE public.grocerylist_stocked_items (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  owner_id text NOT NULL,
  name text NOT NULL,
  aisle USER-DEFINED NOT NULL DEFAULT 'other'::ingredient_aisles,
  always_stocked boolean NOT NULL DEFAULT true,
  notes text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT grocerylist_stocked_items_pkey PRIMARY KEY (id)
);
CREATE TABLE public.portals_client_users (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  client_id uuid NOT NULL,
  organization_id uuid NOT NULL,
  name text NOT NULL,
  email text NOT NULL,
  phone text,
  avatar_url text,
  job_title text,
  role text NOT NULL DEFAULT 'member'::text CHECK (role = ANY (ARRAY['admin'::text, 'member'::text, 'viewer'::text])),
  portal_access_enabled boolean NOT NULL DEFAULT true,
  portal_last_accessed_at timestamp with time zone,
  invite_sent_at timestamp with time zone,
  invite_accepted_at timestamp with time zone,
  invite_token text,
  auth_user_id text UNIQUE,
  email_notifications_enabled boolean NOT NULL DEFAULT true,
  notification_preferences jsonb,
  created_by text NOT NULL,
  updated_by text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  last_login_at timestamp with time zone,
  CONSTRAINT portals_client_users_pkey PRIMARY KEY (id),
  CONSTRAINT portals_client_users_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.portals_clients(id),
  CONSTRAINT portals_client_users_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.portals_organizations(id)
);
CREATE TABLE public.portals_clients (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  organization_id uuid NOT NULL,
  company_name text NOT NULL,
  email text NOT NULL,
  phone text,
  website text,
  logo_url text,
  status text NOT NULL DEFAULT 'active'::text CHECK (status = ANY (ARRAY['active'::text, 'inactive'::text, 'archived'::text])),
  address jsonb,
  notes text,
  tags ARRAY,
  custom_fields jsonb,
  created_by text NOT NULL,
  updated_by text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT portals_clients_pkey PRIMARY KEY (id),
  CONSTRAINT portals_clients_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES public.portals_organizations(id)
);
CREATE TABLE public.portals_organizations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  slug text NOT NULL UNIQUE,
  logo_url text,
  primary_color text DEFAULT '#6366f1'::text,
  secondary_color text DEFAULT '#8b5cf6'::text,
  owner_clerk_id text NOT NULL,
  owner_email text NOT NULL,
  owner_name text,
  stripe_customer_id text,
  subscription_tier text DEFAULT 'trial'::text CHECK (subscription_tier = ANY (ARRAY['trial'::text, 'starter'::text, 'professional'::text, 'agency'::text])),
  subscription_status text DEFAULT 'trialing'::text CHECK (subscription_status = ANY (ARRAY['trialing'::text, 'active'::text, 'past_due'::text, 'canceled'::text, 'paused'::text])),
  trial_ends_at timestamp with time zone,
  custom_domain text UNIQUE,
  email_from_name text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  onboarding_completed boolean DEFAULT false,
  onboarding_step integer DEFAULT 0,
  storage_used_bytes bigint NOT NULL DEFAULT 0,
  storage_limit_bytes bigint NOT NULL DEFAULT '10737418240'::bigint,
  CONSTRAINT portals_organizations_pkey PRIMARY KEY (id)
);
CREATE TABLE public.stl_directory_businesses (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  clerk_id text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  business_name text NOT NULL,
  business_category text NOT NULL,
  business_description text NOT NULL,
  business_email text,
  business_phone text,
  business_website text,
  business_address text,
  business_city text,
  business_state text,
  business_zip text,
  latitude numeric,
  longitude numeric,
  hours_of_operation jsonb,
  year_established integer,
  logo_url text,
  banner_image_url text,
  gallery_images jsonb,
  social_media jsonb,
  is_verified boolean DEFAULT false,
  is_featured boolean DEFAULT false,
  is_active boolean DEFAULT true,
  view_count integer DEFAULT 0,
  average_rating numeric,
  review_count integer DEFAULT 0,
  business_meta jsonb,
  search_vector tsvector DEFAULT ((setweight(to_tsvector('english'::regconfig, COALESCE(business_name, ''::text)), 'A'::"char") || setweight(to_tsvector('english'::regconfig, COALESCE(business_category, ''::text)), 'B'::"char")) || setweight(to_tsvector('english'::regconfig, COALESCE(business_description, ''::text)), 'C'::"char")),
  business_category_slug text,
  CONSTRAINT stl_directory_businesses_pkey PRIMARY KEY (id)
);
CREATE TABLE public.stl_directory_contact_form (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  name character varying,
  email character varying,
  phone character varying,
  subject character varying,
  message character varying,
  CONSTRAINT stl_directory_contact_form_pkey PRIMARY KEY (id)
);
CREATE TABLE public.stl_directory_favorites (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp without time zone,
  business_id uuid DEFAULT gen_random_uuid(),
  clerk_id text,
  CONSTRAINT stl_directory_favorites_pkey PRIMARY KEY (id),
  CONSTRAINT stl_directory_favorites_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.stl_directory_businesses(id)
);
CREATE TABLE public.stl_directory_reviews (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  clerk_id text NOT NULL,
  business_id uuid NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  rating integer NOT NULL CHECK (rating >= 1 AND rating <= 5),
  review_title text,
  review_content text NOT NULL,
  reviewer_name text NOT NULL,
  reviewer_email text,
  is_verified boolean DEFAULT false,
  is_featured boolean DEFAULT false,
  is_approved boolean DEFAULT false,
  helpful_count integer DEFAULT 0,
  reported_count integer DEFAULT 0,
  admin_notes text,
  review_meta jsonb,
  review_images ARRAY DEFAULT '{}'::text[],
  search_vector tsvector,
  reviewer_avatar_url text,
  reviewer_first_name text,
  reviewer_last_name text,
  reviewer_username text,
  CONSTRAINT stl_directory_reviews_pkey PRIMARY KEY (id),
  CONSTRAINT stl_directory_reviews_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.stl_directory_businesses(id)
);
CREATE TABLE public.task_scheduler_profiles (
  id text NOT NULL,
  email text NOT NULL UNIQUE,
  phone text,
  notify_via text DEFAULT 'email'::text CHECK (notify_via = ANY (ARRAY['email'::text, 'sms'::text, 'both'::text])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT task_scheduler_profiles_pkey PRIMARY KEY (id)
);
CREATE TABLE public.task_scheduler_task_completions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  task_id uuid NOT NULL,
  user_id text NOT NULL,
  completed_at timestamp with time zone NOT NULL DEFAULT now(),
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT task_scheduler_task_completions_pkey PRIMARY KEY (id),
  CONSTRAINT task_scheduler_task_completions_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.task_scheduler_tasks(id),
  CONSTRAINT task_scheduler_task_completions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.task_scheduler_profiles(id)
);
CREATE TABLE public.task_scheduler_task_tags (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  task_id uuid NOT NULL,
  tag text NOT NULL CHECK (tag = lower(tag)),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT task_scheduler_task_tags_pkey PRIMARY KEY (id),
  CONSTRAINT task_scheduler_task_tags_task_id_fkey FOREIGN KEY (task_id) REFERENCES public.task_scheduler_tasks(id)
);
CREATE TABLE public.task_scheduler_tasks (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id text NOT NULL,
  title text NOT NULL,
  description text,
  frequency_type text NOT NULL CHECK (frequency_type = ANY (ARRAY['days'::text, 'weeks'::text, 'months'::text, 'years'::text])),
  frequency_value integer NOT NULL CHECK (frequency_value > 0),
  day_of_month integer CHECK (day_of_month >= 1 AND day_of_month <= 31),
  start_date date NOT NULL,
  next_due_date date NOT NULL,
  last_completed_at timestamp with time zone,
  last_notified_at timestamp with time zone,
  notify_via text DEFAULT 'email'::text CHECK (notify_via = ANY (ARRAY['email'::text, 'sms'::text, 'both'::text])),
  active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT task_scheduler_tasks_pkey PRIMARY KEY (id),
  CONSTRAINT task_scheduler_tasks_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.task_scheduler_profiles(id)
);